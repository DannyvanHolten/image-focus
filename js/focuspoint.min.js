!function(e, t) {
    "use strict";
    function i(e) {
        var t = e.find(".details-image");
        e.addClass("IFA-initialized");
        var i = new IFA.Models.Attachment({
            $el: e,
            $img: t
        }), o = (new IFA.Views.Attachment({
            model: i
        }), new IFA.Models.FocusInterface({})), n = new IFA.Views.FocusInterface({
            el: e.get(0),
            $el: e,
            model: o
        }, {
            $img: t
        });
        i.getStoredFocusPoint(), n.render(), o.set("_state.init", !0);
    }
    t.IFA = {
        Models: {},
        Collections: {},
        Views: {}
    }, e(document).on("ready", function() {
        setInterval(function() {
            var t = e(".attachment-details");
            t.length && !e(".IFA-initialized").length && t.each(function() {
                i(e(this));
            });
        }, 500);
    });
}(jQuery, window), function(e, t) {
    "use strict";
    IFA.Models.Attachment = Backbone.Model.extend({
        $el: !1,
        $img: !1,
        _id: !1,
        _width: !1,
        _height: !1,
        _offset: {
            x: !1,
            y: !1
        },
        _focusPoint: {
            x: 50,
            y: 50
        },
        initialize: function(e) {
            console.log("init model attachment"), this.$el = e.$el, this.$img = e.$img, this._id = this.$el.data("id"), 
            console.log(this._id);
        },
        getStoredFocusPoint: function() {
            console.log("getStoredFocusPoint");
            var t = this, i = {
                id: this._id
            };
            e.ajax({
                type: "POST",
                url: ajaxurl,
                data: {
                    action: "get-focuspoint",
                    attachment: i
                },
                dataType: "json"
            }).always(function(e) {
                if (!0 === e.success) try {
                    if (!e.focusPoint.hasOwnProperty("x") || !e.focusPoint.hasOwnProperty("y")) throw "Wrong object properties";
                    t.set("_focusPoint", e.focusPoint);
                } catch (e) {
                    console.log(e);
                }
            });
        }
    });
}(jQuery, window), function(e, t) {
    IFA.Models.FocusInterface = Backbone.Model.extend({
        _width: 0,
        _height: 0,
        _radius: 0,
        _offset: {
            x: 0,
            y: 0
        },
        _position: {
            x: 0,
            y: 0
        },
        _clickPosition: {
            x: 0,
            y: 0
        },
        _state: {
            init: !1,
            move: !1,
            active: !1,
            hover: !1
        },
        initialize: function() {
            console.log("initialize focuspoint");
        }
    });
}(jQuery, window), function(e, t) {
    "use strict";
    IFA.Views.Attachment = Backbone.View.extend({
        events: {
            resize: "updateDimensions"
        },
        initialize: function() {
            console.log("init view attachment");
            var i = this;
            e(t).on("resize", function() {
                i.updateDimensions();
            }), this.model.on("change:_focusPoint", this.updateDimensions, this);
        },
        updateDimensions: function() {
            console.log("attachment view: update dimensions");
            var e = this.model.$img;
            this.model._width = e.width(), this.model._height = e.height(), this.model._offset.x = e.offset().left, 
            this.model._offset.y = e.offset().top;
        },
        render: function() {
            return console.log("attachment view: render"), this;
        },
        remove: function() {
            e(t).off("resize", this.updateDimensions), Backbone.View.prototype.remove.apply(this, arguments);
        }
    });
}(jQuery, window), function(e, t) {
    "use strict";
    IFA.Views.FocusInterface = Backbone.View.extend({
        cssClass: {
            _imageFocus: "image-focus",
            imageFocus: {
                _wrapper: "image-focus__wrapper",
                _img: "image-focus__img",
                _point: "image-focus__point",
                _clickarea: "image-focus__clickarea",
                _button: "image-focus__button"
            }
        },
        template: !1,
        $img: !1,
        imgHtml: !1,
        $imageFocus: !1,
        $container: !1,
        initialize: function(e, t) {
            this.template = wp.template("IFA-focus-point"), this.$img = t.$img, this.$img.addClass(this.cssClass.imageFocus._img), 
            this.imgHtml = this.$img.get(0).outerHTML, this.$img.wrap('<div class="IFA-container"></div>'), 
            this.$container = this.$el.find(".IFA-container"), this.render(), this.model.on("change", this.render, this);
        },
        render: function() {
            console.log("focusinterface view: render"), this.$container.html(this.template({
                imageObject: this.imgHtml,
                state: "is-initialized"
            }));
        }
    });
}(jQuery, window);
//# sourceMappingURL=focuspoint.min.js.map